{"version":3,"file":"static/js/453.f4e3560d.chunk.js","mappings":"+OAQMA,EAAa,SAACC,EAASC,EAAWC,GACpC,OAAQF,GACJ,IAAK,UACD,OAAO,SAACG,EAAA,EAAO,IACnB,IAAK,UACD,OAAOD,GAAiB,SAACD,EAAS,KAAM,SAACE,EAAA,EAAO,IACpD,IAAK,YACD,OAAO,SAACF,EAAS,IACrB,IAAK,QACD,OAAO,SAACG,EAAA,EAAY,IACxB,QACI,MAAM,IAAIC,MAAM,4BAE5B,EAmEA,EAjEmB,WACf,OAAoCC,EAAAA,EAAAA,UAAS,IAAG,eAAzCC,EAAU,KAAEC,EAAa,KAChC,GAA4CF,EAAAA,EAAAA,WAAS,GAAM,eAApDJ,EAAc,KAAEO,EAAiB,KACxC,GAA4BH,EAAAA,EAAAA,UAAS,GAAE,eAAhCI,EAAM,KAAEC,EAAS,KACxB,GAAsCL,EAAAA,EAAAA,WAAS,GAAM,eAA9CM,EAAW,KAAEC,EAAc,KAElC,GAA8CC,EAAAA,EAAAA,KAAtCC,EAAY,EAAZA,aAAcf,EAAO,EAAPA,QAASgB,EAAU,EAAVA,YAE/BC,EAAAA,EAAAA,YAAU,WACNC,EAAUR,GAAQ,EACtB,GAAG,IAEH,IAAMQ,EAAY,SAACR,EAAQS,GACbV,GAAVU,GACAJ,EAAaL,GACRU,KAAKC,GACLD,MAAK,kBAAMJ,EAAW,YAAY,GAC3C,EAEMK,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAGZf,GAAc,SAAAD,GAAU,wBAAQA,IAAU,OAAKe,GAAa,IAC5Db,GAAkB,SAAAP,GAAc,OAAI,CAAK,IACzCS,GAAU,SAAAD,GAAM,OAAIA,EAAS,CAAC,IAC9BG,GAAe,SAAAD,GAAW,OAAIW,CAAK,GACvC,EAsBA,OACI,iBAAKE,UAAU,eAAc,UACxB1B,EAAWC,GAAS,kBAtB7B,SAAqB0B,GACjB,IAAMC,EAAQD,EAAIE,KAAI,SAACC,EAAMC,GACzB,OACI,eAAIL,UAAU,eAAc,UACxB,UAAC,KAAI,CAACM,GAAE,kCAA6BF,EAAKG,IAAK,WAC3C,gBAAKC,IAAKJ,EAAKK,UAAWC,IAAKN,EAAKO,MAAOX,UAAU,sBACrD,gBAAKA,UAAU,oBAAmB,SAAEI,EAAKO,SACzC,gBAAKX,UAAU,qBAAoB,SAAEI,EAAKQ,YAJhBP,EAQ1C,IAEA,OACI,eAAIL,UAAU,eAAc,SACvBE,GAGb,CAImCW,CAAY/B,EAAW,GAAEL,IACpD,mBACIuB,UAAU,mCACVc,SAAUrC,EACVsC,MAAO,CAAE,QAAW5B,EAAc,OAAS,SAC3C6B,QAAS,kBAAMvB,EAAUR,EAAO,EAAC,UACjC,gBAAKe,UAAU,QAAO,SAAC,kBAIvC,E,UClEA,EAhBmB,WACf,OACI,iCACI,UAACiB,EAAA,EAAM,YACH,iBACIC,KAAK,cACLC,QAAQ,kCAEZ,2BAAO,oBAEX,SAACC,EAAA,EAAS,KACV,SAAC,EAAU,MAGvB,C","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner />;\n        case 'loading':\n            return newItemLoading ? <Component /> : <Spinner />;\n        case 'confirmed':\n            return <Component />;\n        case 'error':\n            return <ErrorMessage />;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { getAllComics, process, setProcess } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`./marvel_starter/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{ 'display': comicsEnded ? 'none' : 'block' }}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of aur comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"names":["setContent","process","Component","newItemLoading","Spinner","ErrorMessage","Error","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","arr","items","map","item","i","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","onClick","Helmet","name","content","AppBanner"],"sourceRoot":""}